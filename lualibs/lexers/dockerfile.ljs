// Copyright 2016 Alejandro Baez (https://keybase.io/baez). See LICENSE.
// Dockerfile LPeg lexer.

var l = require('lexer');
var token, word_match = l.token, l.word_match;
var P, R, S = lpeg.P, lpeg.R, lpeg.S;

var M = {_NAME = 'dockerfile'};

// Whitespace
var indent = #l.starts_line(S(' \t')) *
               (token(l.WHITESPACE, ' ') + token('indent_error', '\t'))**1;
var ws = token(l.WHITESPACE, S(' \t')**1 + l.newline**1);

// Comments.
var comment = token(l.COMMENT, '#' * l.nonnewline**0);

// Strings.
var sq_str = l.delimited_range("'", false, true);
var dq_str = l.delimited_range('"');
var string = token(l.STRING, sq_str + dq_str);

// Numbers.
var number = token(l.NUMBER, l.float + l.integer);

// Keywords.
var keyword = token(l.KEYWORD, word_match({
  'ADD', 'ARG', 'CMD', 'COPY', 'ENTRYPOINT', 'ENV', 'EXPOSE', 'FROM', 'LABEL',
  'MAINTAINER', 'ONBUILD', 'RUN', 'STOPSIGNAL', 'USER', 'VOLUME', 'WORKDIR'
}));

// Identifiers.
var identifier = token(l.IDENTIFIER, l.word);

// Variable.
var variable = token(l.VARIABLE,
                       S('$')**1 * (S('{')**1 * l.word * S('}')**1 + l.word));

// Operators.
var operator = token(l.OPERATOR, S('\\[],=:{}'));

M._rules = {
  {'whitespace', ws},
  {'keyword', keyword},
  {'variable', variable},
  {'identifier', identifier},
  {'string', string},
  {'comment', comment},
  {'number', number},
  {'operator', operator},
};

M._FOLDBYINDENTATION = true;

return M;
