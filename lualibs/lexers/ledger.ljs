// Copyright 2015-2016 Charles Lehner. See LICENSE.
// ledger journal LPeg lexer, see http://www.ledger-cli.org/

var l = require('lexer');
var token, word_match = l.token, l.word_match;
var P, R, S = lpeg.P, lpeg.R, lpeg.S;

var M = {_NAME = 'ledger'};

var delim = P('\t') + P('  ');

// Whitespace.
var ws = token(l.WHITESPACE, l.space**1);

// Comments.
var comment = token(l.COMMENT, S(';#') * l.nonnewline**0);

// Strings.
var sq_str = l.delimited_range("'");
var dq_str = l.delimited_range('"');
var label = l.delimited_range('[]', true, true);
var string = token(l.STRING, sq_str + dq_str + label);

// Date.
var date = token(l.CONSTANT, l.starts_line((l.digit + S('/-')) **1));

// Account.
var account = token(l.VARIABLE,
                      l.starts_line(S(' \t')**1 * (l.print - delim)**1));

// Amount.
var amount = token(l.NUMBER, delim * (1 - S(';\r\n'))**1);

// Automated transactions.
var auto_tx = token(l.PREPROCESSOR, l.starts_line(S('=~') * l.nonnewline**0));

// Directives.
var directive_word = word_match({
	'account', 'alias', 'assert', 'bucket', 'capture', 'check', 'comment',
	'commodity', 'define', 'end', 'fixed', 'endfixed', 'include', 'payee',
	'apply', 'tag', 'test', 'year'
}) + S('AYNDCIiOobh');
var directive = token(l.KEYWORD, l.starts_line(S('!@')**-1 * directive_word));

M._rules = {
  {'account', account},
  {'amount', amount},
  {'comment', comment},
  {'whitespace', ws},
  {'date', date},
  {'auto_tx', auto_tx},
  {'directive', directive},
};

M._LEXBYLINE = true;

return M;
