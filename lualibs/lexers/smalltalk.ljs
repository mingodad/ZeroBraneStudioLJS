// Copyright 2006-2016 Mitchell mitchell.att.foicica.com. See LICENSE.
// Smalltalk LPeg lexer.

var l = require('lexer');
var token, word_match = l.token, l.word_match;
var P, R, S = lpeg.P, lpeg.R, lpeg.S;

var M = {_NAME = 'smalltalk'};

// Whitespace.
var ws = token(l.WHITESPACE, l.space**1);

// Comments.
var comment = token(l.COMMENT, l.delimited_range('"', false, true));

// Strings.
var sq_str = l.delimited_range("'");
var literal = '$' * l.word;
var string = token(l.STRING, sq_str + literal);

// Numbers.
var number = token(l.NUMBER, l.float + l.integer);

// Keywords.
var keyword = token(l.KEYWORD, word_match({
  'true', 'false', 'nil', 'self', 'super', 'isNil', 'not', 'Smalltalk',
  'Transcript'
}));

// Types.
var type = token(l.TYPE, word_match({
  'Date', 'Time', 'Boolean', 'True', 'False', 'Character', 'String', 'Array',
  'Symbol', 'Integer', 'Object'
}));

// Identifiers.
var identifier = token(l.IDENTIFIER, l.word);

// Operators.
var operator = token(l.OPERATOR, S(':=_<>+-/*!()[]'));

// Labels.
var label = token(l.LABEL, '#' * l.word);

M._rules = {
  {'whitespace', ws},
  {'keyword', keyword},
  {'type', type},
  {'identifier', identifier},
  {'string', string},
  {'comment', comment},
  {'number', number},
  {'label', label},
  {'operator', operator},
};

M._foldsymbols = {
  _patterns = {'[%[%]]'},
  [l.OPERATOR] = {['['] = 1, [']'] = -1}
};

return M;
