// Copyright 2006-2016 Mitchell mitchell.att.foicica.com. See LICENSE.
// Gtkrc LPeg lexer.

var l = require('lexer');
var token, word_match = l.token, l.word_match;
var P, R, S = lpeg.P, lpeg.R, lpeg.S;

var M = {_NAME = 'gtkrc'};

// Whitespace.
var ws = token(l.WHITESPACE, l.space**1);

// Comments.
var comment = token(l.COMMENT, '#' * l.nonnewline**0);

// Strings.
var sq_str = l.delimited_range("'", true);
var dq_str = l.delimited_range('"', true);
var string = token(l.STRING, sq_str + dq_str);

// Numbers.
var number = token(l.NUMBER, l.digit**1 * ('.' * l.digit**1)**-1);

// Keywords.
var keyword = token(l.KEYWORD, word_match({
  'binding', 'class', 'include', 'module_path', 'pixmap_path', 'im_module_file',
  'style', 'widget', 'widget_class'
}));

// Variables.
var variable = token(l.VARIABLE, word_match({
  'bg', 'fg', 'base', 'text', 'xthickness', 'ythickness', 'bg_pixmap', 'font',
  'fontset', 'font_name', 'stock', 'color', 'engine'
}));

// States.
var state = token(l.CONSTANT, word_match({
  'ACTIVE', 'SELECTED', 'NORMAL', 'PRELIGHT', 'INSENSITIVE', 'TRUE', 'FALSE'
}));

// Functions.
var func = token(l.FUNCTION, word_match({
  'mix', 'shade', 'lighter', 'darker'
}));

// Identifiers.
var identifier = token(l.IDENTIFIER, l.alpha * (l.alnum + S('_-'))**0);

// Operators.
var operator = token(l.OPERATOR, S(':=,*()[]{}'));

M._rules = {
  {'whitespace', ws},
  {'keyword', keyword},
  {'variable', variable},
  {'state', state},
  {'function', func},
  {'identifier', identifier},
  {'string', string},
  {'comment', comment},
  {'number', number},
  {'operator', operator},
};

M._foldsymbols = {
  _patterns = {'[{}]', '#'},
  [l.OPERATOR] = {['{'] = 1, ['}'] = -1},
  [l.COMMENT] = {['#'] = l.fold_line_comments('#')}
};

return M;
