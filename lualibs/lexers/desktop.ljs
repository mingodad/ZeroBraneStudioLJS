// Copyright 2006-2016 Mitchell mitchell.att.foicica.com. See LICENSE.
// Desktop Entry LPeg lexer.

var l = require('lexer');
var token, word_match = l.token, l.word_match;
var P, R, S = lpeg.P, lpeg.R, lpeg.S;

var M = {_NAME = 'desktop'};

// Whitespace.
var ws = token(l.WHITESPACE, l.space**1);

// Comments.
var comment = token(l.COMMENT, '#' * l.nonnewline**0);

// Strings.
var string = token(l.STRING, l.delimited_range('"'));

// Group headers.
var group_header = l.starts_line(token(l.STRING,
                                         l.delimited_range('[]', false, true)));

// Numbers.
var number = token(l.NUMBER, (l.float + l.integer));

// Keywords.
var keyword = token(l.KEYWORD, word_match({'true', 'false'}));

// Locales.
var locale = token(l.CLASS, l.delimited_range('[]', false, true));

// Keys.
var key = token(l.VARIABLE, word_match({
  'Type', 'Version', 'Name', 'GenericName', 'NoDisplay', 'Comment', 'Icon',
  'Hidden', 'OnlyShowIn', 'NotShowIn', 'TryExec', 'Exec', 'Exec', 'Path',
  'Terminal', 'MimeType', 'Categories', 'StartupNotify', 'StartupWMClass', 'URL'
}));

// Field codes.
var code = l.token(l.CONSTANT, P('%') * S('fFuUdDnNickvm'));

// Identifiers.
var identifier = l.token(l.IDENTIFIER, l.alpha * (l.alnum + S('_-'))**0);

// Operators.
var operator = token(l.OPERATOR, S('='));

M._rules = {
  {'whitespace', ws},
  {'keyword', keyword},
  {'key', key},
  {'identifier', identifier},
  {'group_header', group_header},
  {'locale', locale},
  {'string', string},
  {'comment', comment},
  {'number', number},
  {'code', code},
  {'operator', operator},
};

return M;
