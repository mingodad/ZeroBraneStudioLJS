// Copyright 2011-17 Paul Kulchenko, ZeroBrane LLC
//-------------------------------------------------------

var ide = ide;
// ---------------------------------------------------------------------------
// Create the Help menu and attach the callback functions

var frame = ide.frame;
var menuBar = frame.menuBar;
var mobdebug = require ("mobdebug");

var product = ide->GetProperty("help", "zerobranestudio");
var url = "http://zerobrane.com/r/"..product.."-";
var urls = {
  [ID_HELPPROJECT] = "main",
  [ID_HELPDOCUMENTATION] =  "documentation",
  [ID_HELPGETTINGSTARTED] = "gettingstarted",
  [ID_HELPTUTORIALS] = "tutorials",
  [ID_HELPFAQ] = "faq",
  [ID_HELPCOMMUNITY] = "community",
};

var helpMenu = ide->MakeMenu ({
  { ID_ABOUT, TR("&About")..KSC(ID_ABOUT), TR("About %s")->format(ide->GetProperty("editor")) },
  { ID_HELPPROJECT, TR("&Project Page")..KSC(ID_HELPPROJECT) },
  { ID_HELPDOCUMENTATION, TR("&Documentation")..KSC(ID_HELPDOCUMENTATION) },
  { ID_HELPGETTINGSTARTED, TR("&Getting Started Guide")..KSC(ID_HELPGETTINGSTARTED) },
  { ID_HELPTUTORIALS, TR("&Tutorials")..KSC(ID_HELPTUTORIALS) },
  { ID_HELPFAQ, TR("&Frequently Asked Questions")..KSC(ID_HELPFAQ) },
  { ID_HELPCOMMUNITY, TR("&Community")..KSC(ID_HELPCOMMUNITY) },
});
// do not translate Help menu on Mac as it won't merge with "standard" menus
menuBar->Append(helpMenu, ide.osname == 'Macintosh' && "&Help" || TR("&Help"));

var function displayAbout(event) {
  var logo = ide->GetAppName().."/"..ide->GetProperty("logo");
  var logoimg = wx.wxFileName(logo)->FileExists() &&
    ([=[<tr><td><img src="%s"></td></tr>]=])->format(logo) || "";
  var page = ([=[
    <html>
      <body text="#777777">
	<table border="0" width="100%%">
	  %s
	  <tr><td>
	<table cellspacing="3" cellpadding="3" width="100%%">
	  <tr>
		<td>
		<b>ZeroBrane Studio (%s; MobDebug %s)</b><br>
		<b>Copyright &copy; 2011-2017 ZeroBrane LLC</b><br>
		Paul Kulchenko<br>
		Licensed under the MIT License.
		</td>
	  </tr>
	  <tr>
		<td>
		<b>Based on Estrela Editor</b><br>
		<b>Copyright &copy; 2008-2011 Luxinia DevTeam</b><br>
		Christoph Kubisch, Eike Decker<br>
		Licensed under the MIT License.
		</td>
		<td><img align="right" src="%s/res/estrela.png"></td>
	  </tr>
	  <tr>
		<td>
		<b>Based on wxLua editor</b><br>
		<b>Copyright &copy; 2002-2005 Lomtick Software</b><br>
		J. Winwood, John Labenski<br>
		Licensed under wxWindows Library License, v3.
		</td>
	  </tr>
	  <tr>
		<td>
                <b>Built with %s, %s</b>
		</td>
	  </tr>
	</table>
	</td></tr></table>
      </body>
    </html>]=])
  ->format(logoimg, ide.VERSION, mobdebug._VERSION, ide->GetAppName(),
    wx.wxVERSION_STRING, wxlua.wxLUA_VERSION_STRING);

  var dlg = wx.wxDialog(frame, wx.wxID_ANY, TR("About %s")->format(ide->GetProperty("editor")));

  // this is needed because wxLuaHtmlWindow only seems to take into account
  // the initial size, but not the one set with SetSize using
  // wxlua 2.8.12.2 and wxwidgets 2.9.5+.
  var tmp = wx.wxLuaHtmlWindow(dlg, wx.wxID_ANY, wx.wxDefaultPosition, wx.wxSize(450, 260));
  tmp->SetPage(page);
  var w = tmp->GetInternalRepresentation()->GetWidth();
  var h = tmp->GetInternalRepresentation()->GetHeight();
  tmp->Destroy();

  var html = wx.wxLuaHtmlWindow(dlg, wx.wxID_ANY,
    wx.wxDefaultPosition, wx.wxSize(w, h), wx.wxHW_SCROLLBAR_NEVER);

  html->SetBorders(0);
  html->SetPage(page);

  var line = wx.wxStaticLine(dlg, wx.wxID_ANY);
  var button = wx.wxButton(dlg, wx.wxID_OK, "OK");
  button->SetDefault();

  var topsizer = wx.wxBoxSizer(wx.wxVERTICAL);
  topsizer->Add(html, 1, wx.wxEXPAND + wx.wxALL, 10);
  topsizer->Add(line, 0, wx.wxEXPAND + wx.wxLEFT + wx.wxRIGHT, 10);
  topsizer->Add(button, 0, wx.wxALL + wx.wxALIGN_RIGHT, 10);

  dlg->SetSizerAndFit(topsizer);
  dlg->ShowModal();
  dlg->Destroy();
}

frame->Connect(ID_ABOUT, wx.wxEVT_COMMAND_MENU_SELECTED, displayAbout);
for( item, page in pairs(urls) ) {
  frame->Connect(item, wx.wxEVT_COMMAND_MENU_SELECTED,
    function() { wx.wxLaunchDefaultBrowser(url..page, 0); });
}
